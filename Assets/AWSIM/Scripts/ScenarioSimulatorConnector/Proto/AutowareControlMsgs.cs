// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: autoware_control_msgs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AutowareControlMsgs {

  /// <summary>Holder for reflection information generated from autoware_control_msgs.proto</summary>
  public static partial class AutowareControlMsgsReflection {

    #region Descriptor
    /// <summary>File descriptor for autoware_control_msgs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AutowareControlMsgsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChthdXRvd2FyZV9jb250cm9sX21zZ3MucHJvdG8SFWF1dG93YXJlX2NvbnRy",
            "b2xfbXNncxoYYnVpbHRpbl9pbnRlcmZhY2VzLnByb3RvItMBCgdMYXRlcmFs",
            "EicKBXN0YW1wGAEgASgLMhguYnVpbHRpbl9pbnRlcmZhY2VzLlRpbWUSLQoL",
            "Y290cm9sX3RpbWUYAiABKAsyGC5idWlsdGluX2ludGVyZmFjZXMuVGltZRIb",
            "ChNzdGVlcmluZ190aXJlX2FuZ2xlGAMgASgCEiMKG3N0ZWVyaW5nX3RpcmVf",
            "cm90YXRpb25fcmF0ZRgEIAEoAhIuCiZpc19kZWZpbmVkX3N0ZWVyaW5nX3Rp",
            "cmVfcm90YXRpb25fcmF0ZRgFIAEoCCLWAQoMTG9uZ2l0dWRpbmFsEicKBXN0",
            "YW1wGAEgASgLMhguYnVpbHRpbl9pbnRlcmZhY2VzLlRpbWUSLQoLY290cm9s",
            "X3RpbWUYAiABKAsyGC5idWlsdGluX2ludGVyZmFjZXMuVGltZRIQCgh2ZWxv",
            "Y2l0eRgDIAEoAhIUCgxhY2NlbGVyYXRpb24YBCABKAISDAoEamVyaxgFIAEo",
            "AhIfChdpc19kZWZpbmVkX2FjY2VsZXJhdGlvbhgGIAEoCBIXCg9pc19kZWZp",
            "bmVkX2plcmsYByABKAgizQEKB0NvbnRyb2wSJwoFc3RhbXAYASABKAsyGC5i",
            "dWlsdGluX2ludGVyZmFjZXMuVGltZRItCgtjb3Ryb2xfdGltZRgCIAEoCzIY",
            "LmJ1aWx0aW5faW50ZXJmYWNlcy5UaW1lEi8KB2xhdGVyYWwYAyABKAsyHi5h",
            "dXRvd2FyZV9jb250cm9sX21zZ3MuTGF0ZXJhbBI5Cgxsb25naXR1ZGluYWwY",
            "BCABKAsyIy5hdXRvd2FyZV9jb250cm9sX21zZ3MuTG9uZ2l0dWRpbmFsYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::BuiltinInterfaces.BuiltinInterfacesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AutowareControlMsgs.Lateral), global::AutowareControlMsgs.Lateral.Parser, new[]{ "Stamp", "CotrolTime", "SteeringTireAngle", "SteeringTireRotationRate", "IsDefinedSteeringTireRotationRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AutowareControlMsgs.Longitudinal), global::AutowareControlMsgs.Longitudinal.Parser, new[]{ "Stamp", "CotrolTime", "Velocity", "Acceleration", "Jerk", "IsDefinedAcceleration", "IsDefinedJerk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AutowareControlMsgs.Control), global::AutowareControlMsgs.Control.Parser, new[]{ "Stamp", "CotrolTime", "Lateral", "Longitudinal" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Lateral : pb::IMessage<Lateral> {
    private static readonly pb::MessageParser<Lateral> _parser = new pb::MessageParser<Lateral>(() => new Lateral());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lateral> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AutowareControlMsgs.AutowareControlMsgsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lateral() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lateral(Lateral other) : this() {
      stamp_ = other.stamp_ != null ? other.stamp_.Clone() : null;
      cotrolTime_ = other.cotrolTime_ != null ? other.cotrolTime_.Clone() : null;
      steeringTireAngle_ = other.steeringTireAngle_;
      steeringTireRotationRate_ = other.steeringTireRotationRate_;
      isDefinedSteeringTireRotationRate_ = other.isDefinedSteeringTireRotationRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lateral Clone() {
      return new Lateral(this);
    }

    /// <summary>Field number for the "stamp" field.</summary>
    public const int StampFieldNumber = 1;
    private global::BuiltinInterfaces.Time stamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuiltinInterfaces.Time Stamp {
      get { return stamp_; }
      set {
        stamp_ = value;
      }
    }

    /// <summary>Field number for the "cotrol_time" field.</summary>
    public const int CotrolTimeFieldNumber = 2;
    private global::BuiltinInterfaces.Time cotrolTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuiltinInterfaces.Time CotrolTime {
      get { return cotrolTime_; }
      set {
        cotrolTime_ = value;
      }
    }

    /// <summary>Field number for the "steering_tire_angle" field.</summary>
    public const int SteeringTireAngleFieldNumber = 3;
    private float steeringTireAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SteeringTireAngle {
      get { return steeringTireAngle_; }
      set {
        steeringTireAngle_ = value;
      }
    }

    /// <summary>Field number for the "steering_tire_rotation_rate" field.</summary>
    public const int SteeringTireRotationRateFieldNumber = 4;
    private float steeringTireRotationRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SteeringTireRotationRate {
      get { return steeringTireRotationRate_; }
      set {
        steeringTireRotationRate_ = value;
      }
    }

    /// <summary>Field number for the "is_defined_steering_tire_rotation_rate" field.</summary>
    public const int IsDefinedSteeringTireRotationRateFieldNumber = 5;
    private bool isDefinedSteeringTireRotationRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefinedSteeringTireRotationRate {
      get { return isDefinedSteeringTireRotationRate_; }
      set {
        isDefinedSteeringTireRotationRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lateral);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lateral other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stamp, other.Stamp)) return false;
      if (!object.Equals(CotrolTime, other.CotrolTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SteeringTireAngle, other.SteeringTireAngle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SteeringTireRotationRate, other.SteeringTireRotationRate)) return false;
      if (IsDefinedSteeringTireRotationRate != other.IsDefinedSteeringTireRotationRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stamp_ != null) hash ^= Stamp.GetHashCode();
      if (cotrolTime_ != null) hash ^= CotrolTime.GetHashCode();
      if (SteeringTireAngle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SteeringTireAngle);
      if (SteeringTireRotationRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SteeringTireRotationRate);
      if (IsDefinedSteeringTireRotationRate != false) hash ^= IsDefinedSteeringTireRotationRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stamp);
      }
      if (cotrolTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CotrolTime);
      }
      if (SteeringTireAngle != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(SteeringTireAngle);
      }
      if (SteeringTireRotationRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SteeringTireRotationRate);
      }
      if (IsDefinedSteeringTireRotationRate != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDefinedSteeringTireRotationRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stamp);
      }
      if (cotrolTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CotrolTime);
      }
      if (SteeringTireAngle != 0F) {
        size += 1 + 4;
      }
      if (SteeringTireRotationRate != 0F) {
        size += 1 + 4;
      }
      if (IsDefinedSteeringTireRotationRate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lateral other) {
      if (other == null) {
        return;
      }
      if (other.stamp_ != null) {
        if (stamp_ == null) {
          Stamp = new global::BuiltinInterfaces.Time();
        }
        Stamp.MergeFrom(other.Stamp);
      }
      if (other.cotrolTime_ != null) {
        if (cotrolTime_ == null) {
          CotrolTime = new global::BuiltinInterfaces.Time();
        }
        CotrolTime.MergeFrom(other.CotrolTime);
      }
      if (other.SteeringTireAngle != 0F) {
        SteeringTireAngle = other.SteeringTireAngle;
      }
      if (other.SteeringTireRotationRate != 0F) {
        SteeringTireRotationRate = other.SteeringTireRotationRate;
      }
      if (other.IsDefinedSteeringTireRotationRate != false) {
        IsDefinedSteeringTireRotationRate = other.IsDefinedSteeringTireRotationRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stamp_ == null) {
              Stamp = new global::BuiltinInterfaces.Time();
            }
            input.ReadMessage(Stamp);
            break;
          }
          case 18: {
            if (cotrolTime_ == null) {
              CotrolTime = new global::BuiltinInterfaces.Time();
            }
            input.ReadMessage(CotrolTime);
            break;
          }
          case 29: {
            SteeringTireAngle = input.ReadFloat();
            break;
          }
          case 37: {
            SteeringTireRotationRate = input.ReadFloat();
            break;
          }
          case 40: {
            IsDefinedSteeringTireRotationRate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Longitudinal : pb::IMessage<Longitudinal> {
    private static readonly pb::MessageParser<Longitudinal> _parser = new pb::MessageParser<Longitudinal>(() => new Longitudinal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Longitudinal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AutowareControlMsgs.AutowareControlMsgsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Longitudinal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Longitudinal(Longitudinal other) : this() {
      stamp_ = other.stamp_ != null ? other.stamp_.Clone() : null;
      cotrolTime_ = other.cotrolTime_ != null ? other.cotrolTime_.Clone() : null;
      velocity_ = other.velocity_;
      acceleration_ = other.acceleration_;
      jerk_ = other.jerk_;
      isDefinedAcceleration_ = other.isDefinedAcceleration_;
      isDefinedJerk_ = other.isDefinedJerk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Longitudinal Clone() {
      return new Longitudinal(this);
    }

    /// <summary>Field number for the "stamp" field.</summary>
    public const int StampFieldNumber = 1;
    private global::BuiltinInterfaces.Time stamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuiltinInterfaces.Time Stamp {
      get { return stamp_; }
      set {
        stamp_ = value;
      }
    }

    /// <summary>Field number for the "cotrol_time" field.</summary>
    public const int CotrolTimeFieldNumber = 2;
    private global::BuiltinInterfaces.Time cotrolTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuiltinInterfaces.Time CotrolTime {
      get { return cotrolTime_; }
      set {
        cotrolTime_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 3;
    private float velocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    /// <summary>Field number for the "acceleration" field.</summary>
    public const int AccelerationFieldNumber = 4;
    private float acceleration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Acceleration {
      get { return acceleration_; }
      set {
        acceleration_ = value;
      }
    }

    /// <summary>Field number for the "jerk" field.</summary>
    public const int JerkFieldNumber = 5;
    private float jerk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Jerk {
      get { return jerk_; }
      set {
        jerk_ = value;
      }
    }

    /// <summary>Field number for the "is_defined_acceleration" field.</summary>
    public const int IsDefinedAccelerationFieldNumber = 6;
    private bool isDefinedAcceleration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefinedAcceleration {
      get { return isDefinedAcceleration_; }
      set {
        isDefinedAcceleration_ = value;
      }
    }

    /// <summary>Field number for the "is_defined_jerk" field.</summary>
    public const int IsDefinedJerkFieldNumber = 7;
    private bool isDefinedJerk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefinedJerk {
      get { return isDefinedJerk_; }
      set {
        isDefinedJerk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Longitudinal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Longitudinal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stamp, other.Stamp)) return false;
      if (!object.Equals(CotrolTime, other.CotrolTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Velocity, other.Velocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Acceleration, other.Acceleration)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Jerk, other.Jerk)) return false;
      if (IsDefinedAcceleration != other.IsDefinedAcceleration) return false;
      if (IsDefinedJerk != other.IsDefinedJerk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stamp_ != null) hash ^= Stamp.GetHashCode();
      if (cotrolTime_ != null) hash ^= CotrolTime.GetHashCode();
      if (Velocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Velocity);
      if (Acceleration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Acceleration);
      if (Jerk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Jerk);
      if (IsDefinedAcceleration != false) hash ^= IsDefinedAcceleration.GetHashCode();
      if (IsDefinedJerk != false) hash ^= IsDefinedJerk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stamp);
      }
      if (cotrolTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CotrolTime);
      }
      if (Velocity != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Velocity);
      }
      if (Acceleration != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Acceleration);
      }
      if (Jerk != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Jerk);
      }
      if (IsDefinedAcceleration != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDefinedAcceleration);
      }
      if (IsDefinedJerk != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsDefinedJerk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stamp);
      }
      if (cotrolTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CotrolTime);
      }
      if (Velocity != 0F) {
        size += 1 + 4;
      }
      if (Acceleration != 0F) {
        size += 1 + 4;
      }
      if (Jerk != 0F) {
        size += 1 + 4;
      }
      if (IsDefinedAcceleration != false) {
        size += 1 + 1;
      }
      if (IsDefinedJerk != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Longitudinal other) {
      if (other == null) {
        return;
      }
      if (other.stamp_ != null) {
        if (stamp_ == null) {
          Stamp = new global::BuiltinInterfaces.Time();
        }
        Stamp.MergeFrom(other.Stamp);
      }
      if (other.cotrolTime_ != null) {
        if (cotrolTime_ == null) {
          CotrolTime = new global::BuiltinInterfaces.Time();
        }
        CotrolTime.MergeFrom(other.CotrolTime);
      }
      if (other.Velocity != 0F) {
        Velocity = other.Velocity;
      }
      if (other.Acceleration != 0F) {
        Acceleration = other.Acceleration;
      }
      if (other.Jerk != 0F) {
        Jerk = other.Jerk;
      }
      if (other.IsDefinedAcceleration != false) {
        IsDefinedAcceleration = other.IsDefinedAcceleration;
      }
      if (other.IsDefinedJerk != false) {
        IsDefinedJerk = other.IsDefinedJerk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stamp_ == null) {
              Stamp = new global::BuiltinInterfaces.Time();
            }
            input.ReadMessage(Stamp);
            break;
          }
          case 18: {
            if (cotrolTime_ == null) {
              CotrolTime = new global::BuiltinInterfaces.Time();
            }
            input.ReadMessage(CotrolTime);
            break;
          }
          case 29: {
            Velocity = input.ReadFloat();
            break;
          }
          case 37: {
            Acceleration = input.ReadFloat();
            break;
          }
          case 45: {
            Jerk = input.ReadFloat();
            break;
          }
          case 48: {
            IsDefinedAcceleration = input.ReadBool();
            break;
          }
          case 56: {
            IsDefinedJerk = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Control : pb::IMessage<Control> {
    private static readonly pb::MessageParser<Control> _parser = new pb::MessageParser<Control>(() => new Control());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Control> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AutowareControlMsgs.AutowareControlMsgsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Control() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Control(Control other) : this() {
      stamp_ = other.stamp_ != null ? other.stamp_.Clone() : null;
      cotrolTime_ = other.cotrolTime_ != null ? other.cotrolTime_.Clone() : null;
      lateral_ = other.lateral_ != null ? other.lateral_.Clone() : null;
      longitudinal_ = other.longitudinal_ != null ? other.longitudinal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Control Clone() {
      return new Control(this);
    }

    /// <summary>Field number for the "stamp" field.</summary>
    public const int StampFieldNumber = 1;
    private global::BuiltinInterfaces.Time stamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuiltinInterfaces.Time Stamp {
      get { return stamp_; }
      set {
        stamp_ = value;
      }
    }

    /// <summary>Field number for the "cotrol_time" field.</summary>
    public const int CotrolTimeFieldNumber = 2;
    private global::BuiltinInterfaces.Time cotrolTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BuiltinInterfaces.Time CotrolTime {
      get { return cotrolTime_; }
      set {
        cotrolTime_ = value;
      }
    }

    /// <summary>Field number for the "lateral" field.</summary>
    public const int LateralFieldNumber = 3;
    private global::AutowareControlMsgs.Lateral lateral_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AutowareControlMsgs.Lateral Lateral {
      get { return lateral_; }
      set {
        lateral_ = value;
      }
    }

    /// <summary>Field number for the "longitudinal" field.</summary>
    public const int LongitudinalFieldNumber = 4;
    private global::AutowareControlMsgs.Longitudinal longitudinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AutowareControlMsgs.Longitudinal Longitudinal {
      get { return longitudinal_; }
      set {
        longitudinal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Control);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Control other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stamp, other.Stamp)) return false;
      if (!object.Equals(CotrolTime, other.CotrolTime)) return false;
      if (!object.Equals(Lateral, other.Lateral)) return false;
      if (!object.Equals(Longitudinal, other.Longitudinal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stamp_ != null) hash ^= Stamp.GetHashCode();
      if (cotrolTime_ != null) hash ^= CotrolTime.GetHashCode();
      if (lateral_ != null) hash ^= Lateral.GetHashCode();
      if (longitudinal_ != null) hash ^= Longitudinal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stamp);
      }
      if (cotrolTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CotrolTime);
      }
      if (lateral_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Lateral);
      }
      if (longitudinal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Longitudinal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stamp);
      }
      if (cotrolTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CotrolTime);
      }
      if (lateral_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lateral);
      }
      if (longitudinal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Longitudinal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Control other) {
      if (other == null) {
        return;
      }
      if (other.stamp_ != null) {
        if (stamp_ == null) {
          Stamp = new global::BuiltinInterfaces.Time();
        }
        Stamp.MergeFrom(other.Stamp);
      }
      if (other.cotrolTime_ != null) {
        if (cotrolTime_ == null) {
          CotrolTime = new global::BuiltinInterfaces.Time();
        }
        CotrolTime.MergeFrom(other.CotrolTime);
      }
      if (other.lateral_ != null) {
        if (lateral_ == null) {
          Lateral = new global::AutowareControlMsgs.Lateral();
        }
        Lateral.MergeFrom(other.Lateral);
      }
      if (other.longitudinal_ != null) {
        if (longitudinal_ == null) {
          Longitudinal = new global::AutowareControlMsgs.Longitudinal();
        }
        Longitudinal.MergeFrom(other.Longitudinal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stamp_ == null) {
              Stamp = new global::BuiltinInterfaces.Time();
            }
            input.ReadMessage(Stamp);
            break;
          }
          case 18: {
            if (cotrolTime_ == null) {
              CotrolTime = new global::BuiltinInterfaces.Time();
            }
            input.ReadMessage(CotrolTime);
            break;
          }
          case 26: {
            if (lateral_ == null) {
              Lateral = new global::AutowareControlMsgs.Lateral();
            }
            input.ReadMessage(Lateral);
            break;
          }
          case 34: {
            if (longitudinal_ == null) {
              Longitudinal = new global::AutowareControlMsgs.Longitudinal();
            }
            input.ReadMessage(Longitudinal);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
